<?php

/**
 * @file
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\node\NodeTypeInterface;

/**
 * Takes a 'CamelCase'' word and adds spaces to make it 'Camel Case'.
 *
 * @return string
 *   A formated string
 */
function opencalais_ui_make_readable($camel_case) {
  return preg_replace('/(.*?[a-z]{1})([A-Z]{1}.*?)/', '${1} ${2}', $camel_case);
}

/**
 * A Utility function used to turn any (mainly CamelCase) string into a valid machine name
 */
function opencalais_make_machine_name($name) {
  $name = str_replace(' ', '_', $name);
  $name = preg_replace('/([a-z])([A-Z])/', '$1_$2', $name);
  $name = strtolower($name);
  return $name;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function opencalais_ui_form_node_type_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $options = [];
  $field_definitions = \Drupal::service('entity_field.manager')
    ->getFieldDefinitions('node', $form_state->getFormObject()
      ->getEntity()
      ->get('type'));

  foreach ($field_definitions as $field_name => $field_definition) {
    if ($field_definition->getType() == 'entity_reference') {
      if ($field_definition->getFieldStorageDefinition()
          ->getSetting('target_type') == 'taxonomy_term') {
        $options[$field_definition->getName()] = $field_definition->getLabel();
      }
    }
  }

  if ($options == []) {
    drupal_set_message('The content type has no taxonomy fields available. Please add one to use Open Calais.', 'warning');
  }
  if ($options) {
    $form['opencalais_field'] = [
      '#title' => t('Open Calais Field'),
      '#description' => t('Field where to add taxonomy terms.'),
      '#type' => 'select',
      '#options' => $options,
      '#default_value' => $form_state->getFormObject()->getEntity()->getThirdPartySetting('opencalais_ui', 'field'),
      '#empty_option' => t('None'),
    ];
  }
  $form['#entity_builders'][] = 'opencalais_ui_form_node_type_form_submit';
}

/**
 * Entity builder for the node type form with opencalais fields.
 *
 * @see opencalais_ui_form_node_type_form_alter()
 */
function opencalais_ui_form_node_type_form_submit($entity_type, NodeTypeInterface $type, &$form, FormStateInterface $form_state) {
  $type->setThirdPartySetting('opencalais_ui', 'field', $form_state->getValue('opencalais_field'));
}

/**
 * Implements hook_theme().
 */
function opencalais_ui_theme() {
  return [
    'opencalais_ui_relevance_bar' => [
      'render element' => 'element',
      'variables' => [
        'width' => 0,
        'count' => 0
      ],
    ]
  ];
}
